{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGoods","makeProductsList","length","join","slice","addProduct","product","setState","prevState","removeProduct","filter","good","clearList","this","className","type","onClick","map","index","isProductSelected","includes","Fragment","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAGMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGWC,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,QAFpB,EAKEC,iBAAmB,WACjB,IAAQD,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcE,QACpB,KAAK,EACH,MAAO,oBAET,KAAK,EACH,MAAM,GAAN,OAAUF,EAAV,mBAEF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAcG,KAAK,SAA7B,oBAEF,QACE,MAAM,eAAN,OACIH,EAAcI,MAAM,GAAI,GAAGD,KAAK,MADpC,wBAEIH,EAAcI,OAAO,GAAGD,KAAK,SAFjC,8BAnBR,EA2BEE,WAAa,SAACC,GACZ,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BR,cAAc,GAAD,mBAAMQ,EAAUR,eAAhB,CAA+BM,SA7BlD,EAiCEG,cAAgB,SAACH,GACf,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BR,cAAeQ,EAAUR,cAAcU,QAAO,SAAAC,GAAI,OAAIA,IAASL,UAnCrE,EAuCEM,UAAY,WACV,EAAKL,SAAS,CAAEP,cAAe,MAxCnC,4CA2CE,WAAU,IAAD,OACCA,EAAkBa,KAAKd,MAAvBC,cAER,OACE,6BAASc,UAAU,YACjB,wBAAIA,UAAU,mBACXD,KAAKZ,sBAELD,EAAcE,QAEf,4BACEa,KAAK,SACLD,UAAU,2CACVE,QAAS,kBAAM,EAAKJ,cAHtB,SASF,wBAAIE,UAAU,kBACXjB,EAAgBoB,KAAI,SAACX,EAASY,GAC7B,IAAMC,EAAoBnB,EAAcoB,SAASd,GAEjD,OACE,kBAAC,IAAMe,SAAP,CAAgBC,IAAKhB,GACnB,wBAAIQ,UAAU,kBACZ,0BAAMA,UACJK,EACI,iDACA,mDAHN,UAMMD,EAAQ,EANd,aAMoBZ,IAEpB,4BACES,KAAK,SACLD,UACEK,EACI,6CACA,2CAENH,QACEG,EACI,WACA,EAAKV,cAAcH,IAEnB,WACA,EAAKD,WAAWC,KAKpBa,EACI,SACA,kBAjG1B,GAAyBI,IAAMC,WCZ/BC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.dce9bc90.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport class App extends React.Component {\n  state = {\n    selectedGoods: ['Jam'],\n  }\n\n  makeProductsList = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n\n      case 1:\n        return `${selectedGoods} - is selected.`;\n\n      case 2:\n        return `${selectedGoods.join(' and ')} - are selected.`;\n\n      default: {\n        return `\n          ${selectedGoods.slice(0, -2).join(', ')},\n          ${selectedGoods.slice(-2).join(' and ')} are selected.\n        `;\n      }\n    }\n  };\n\n  addProduct = (product) => {\n    this.setState(prevState => ({\n      selectedGoods: [...prevState.selectedGoods, product],\n    }));\n  }\n\n  removeProduct = (product) => {\n    this.setState(prevState => ({\n      selectedGoods: prevState.selectedGoods.filter(good => good !== product),\n    }));\n  }\n\n  clearList = () => {\n    this.setState({ selectedGoods: [] });\n  }\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <section className=\"products\">\n        <h1 className=\"products__title\">\n          {this.makeProductsList()}\n        </h1>\n        {!!selectedGoods.length\n          && (\n          <button\n            type=\"button\"\n            className=\"products__button products__button--clear\"\n            onClick={() => this.clearList()}\n          >\n            Clear\n          </button>\n          )\n        }\n        <ul className=\"products__list\">\n          {goodsFromServer.map((product, index) => {\n            const isProductSelected = selectedGoods.includes(product);\n\n            return (\n              <React.Fragment key={product}>\n                <li className=\"products__item\">\n                  <span className={\n                    isProductSelected\n                      ? 'products__product products__product--selected '\n                      : 'products__product products__product--unselected'\n                    }\n                  >\n                    {`${index + 1}. ${product}`}\n                  </span>\n                  <button\n                    type=\"button\"\n                    className={\n                      isProductSelected\n                        ? 'products__button products__button--removed'\n                        : 'products__button products__button--added'\n                    }\n                    onClick={\n                      isProductSelected\n                        ? () => {\n                          this.removeProduct(product);\n                        }\n                        : () => {\n                          this.addProduct(product);\n                        }\n                      }\n                  >\n                    {\n                      isProductSelected\n                        ? 'Remove'\n                        : 'Add'\n                    }\n                  </button>\n                </li>\n              </React.Fragment>\n            );\n          })}\n        </ul>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}