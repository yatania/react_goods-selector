{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGoods","addProduct","product","setState","prevState","removeProduct","filter","good","clearList","getTitle","length","slice","join","this","className","type","onClick","map","index","isProductSelected","includes","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAGMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGWC,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,QAFpB,EAKEC,WAAa,SAACC,GACZ,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,cAAc,GAAD,mBAAMI,EAAUJ,eAAhB,CAA+BE,SAPlD,EAWEG,cAAgB,SAACH,GACf,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,cAAeI,EAAUJ,cAAcM,QAAO,SAAAC,GAAI,OAAIA,IAASL,UAbrE,EAiBEM,UAAY,WACV,EAAKL,SAAS,CAAEH,cAAe,MAlBnC,EAqBES,SAAW,WACT,OAAwC,IAApC,EAAKV,MAAMC,cAAcU,OACrB,GAAN,OAAU,EAAKX,MAAMC,cAArB,gBAGI,GAAN,OAAU,EAAKD,MAAMC,cAAcW,MAAM,GAAI,GAAGC,KAAK,MAArD,oBACI,EAAKb,MAAMC,cAAcW,OAAO,GAAGC,KAAK,SAD5C,mBA1BJ,4CA8BE,WAAU,IAAD,OACCZ,EAAkBa,KAAKd,MAAvBC,cAER,OACE,6BAASc,UAAU,YAChBd,EAAcU,OAAS,EACtB,wBAAII,UAAU,mBACXD,KAAKJ,WACN,4BACEM,KAAK,SACLD,UAAU,2CACVE,QAAS,kBAAM,EAAKR,cAHtB,MASF,wBAAIM,UAAU,mBAAd,qBAIF,wBAAIA,UAAU,kBACXjB,EAAgBoB,KAAI,SAACf,EAASgB,GAC7B,IAAMC,EAAoBnB,EAAcoB,SAASlB,GAEjD,OACE,wBACEY,UAAU,iBACVO,IAAKnB,GAEL,0BAAMY,UACJK,EACI,iDACA,qBAHN,UAMMD,EAAQ,EANd,aAMoBhB,IAEpB,4BACEa,KAAK,SACLD,UACEK,EACI,6CACA,2CAENH,QACEG,EACI,WACA,EAAKd,cAAcH,IAEnB,WACA,EAAKD,WAAWC,KAKpBiB,EACI,SACA,iBAxFxB,GAAyBG,IAAMC,WCZ/BC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.1130db0d.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport class App extends React.Component {\n  state = {\n    selectedGoods: ['Jam'],\n  }\n\n  addProduct = (product) => {\n    this.setState(prevState => ({\n      selectedGoods: [...prevState.selectedGoods, product],\n    }));\n  }\n\n  removeProduct = (product) => {\n    this.setState(prevState => ({\n      selectedGoods: prevState.selectedGoods.filter(good => good !== product),\n    }));\n  }\n\n  clearList = () => {\n    this.setState({ selectedGoods: [] });\n  }\n\n  getTitle = () => {\n    if (this.state.selectedGoods.length === 1) {\n      return `${this.state.selectedGoods} is selected`;\n    }\n\n    return `${this.state.selectedGoods.slice(0, -1).join(', ')},\n      ${this.state.selectedGoods.slice(-1).join(' and ')} are selected.`;\n  }\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <section className=\"products\">\n        {selectedGoods.length > 0 ? (\n          <h1 className=\"products__title\">\n            {this.getTitle()}\n            <button\n              type=\"button\"\n              className=\"products__button products__button--clear\"\n              onClick={() => this.clearList()}\n            >\n              X\n            </button>\n          </h1>\n        ) : (\n          <h1 className=\"products__title\">\n            No goods selected\n          </h1>\n        )}\n        <ul className=\"products__list\">\n          {goodsFromServer.map((product, index) => {\n            const isProductSelected = selectedGoods.includes(product);\n\n            return (\n              <li\n                className=\"products__item\"\n                key={product}\n              >\n                <span className={\n                  isProductSelected\n                    ? 'products__product products__product--selected '\n                    : 'products__product'\n                  }\n                >\n                  {`${index + 1}. ${product}`}\n                </span>\n                <button\n                  type=\"button\"\n                  className={\n                    isProductSelected\n                      ? 'products__button products__button--removed'\n                      : 'products__button products__button--added'\n                  }\n                  onClick={\n                    isProductSelected\n                      ? () => {\n                        this.removeProduct(product);\n                      }\n                      : () => {\n                        this.addProduct(product);\n                      }\n                    }\n                >\n                  {\n                    isProductSelected\n                      ? 'Remove'\n                      : 'Add'\n                  }\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}